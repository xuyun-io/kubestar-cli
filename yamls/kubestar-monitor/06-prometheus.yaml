{{ if .Values.deployMonitor }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubestar-prometheus-server
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubestar-prometheus-server
  namespace: kubestar-monitor
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubestar-prometheus-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubestar-prometheus-server
subjects:
  - kind: ServiceAccount
    name: kubestar-prometheus-server
    namespace: kubestar-monitor
---
kind: Service
apiVersion: v1
metadata:
  name: prometheus-server-svc
  namespace: kubestar-monitor
spec:
  type: NodePort
  ports:
    - port: 9090
      targetPort: 9090
  selector:
    app: prometheus-server
---
apiVersion: v1
kind: Service
metadata:
  labels:
  name: prometheus-server-headless
  namespace: kubestar-monitor
spec:
  clusterIP: None
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 9090
  selector:
    app: prometheus
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: prometheus-server
  name: prometheus-server
  namespace: kubestar-monitor
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: prometheus-server
  serviceName: prometheus-server-headless
  template:
    metadata:
      labels:
        app: prometheus-server
    spec:
      containers:
        - args:
            - --volume-dir=/etc/config
            - --webhook-url=http://localhost:9090/-/reload
            - --webhook-method=POST
          image: jimmidyson/configmap-reload:v0.2.2
          imagePullPolicy: IfNotPresent
          name: prometheus-server-configmap-reload
          resources:
            limits:
              cpu: 100m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 50Mi
          volumeMounts:
            - name: cm-prometheus-config
              mountPath: /etc/config
              readOnly: true
            - name: prometheus-host-volume
              mountPath: /prometheus
        - args:
            - --config.file=/etc/config/prometheus.yml
            - --storage.tsdb.path=/prometheus
            - --storage.tsdb.retention.time=10d
            - --web.route-prefix=/
            - --web.enable-lifecycle
            - --storage.tsdb.no-lockfile
            - --storage.tsdb.min-block-duration=2h
            - --storage.tsdb.max-block-duration=2h
          env:
            - name: "POD_NAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "metadata.name"
            - name: "POD_NAMESPACE"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "metadata.namespace"
          image: quay.io/prometheus/prometheus:v2.41.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: prometheus-server
          ports:
            - containerPort: 9090
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          resources:
            limits:
              cpu: 1
              memory: 4Gi
            requests:
              cpu: 0.5
              memory: 2Gi
          volumeMounts:
            - name: cm-prometheus-config
              mountPath: /etc/config
              readOnly: true
            - name: prometheus-host-volume
              mountPath: /prometheus
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccount: kubestar-prometheus-server
      serviceAccountName: kubestar-prometheus-server
      terminationGracePeriodSeconds: 300
      volumes:
        - configMap:
            name: prometheus-config
          name: cm-prometheus-config
        - name: prometheus-host-volume
          emptyDir: {}
{{end}}