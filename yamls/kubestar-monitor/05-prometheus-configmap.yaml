apiVersion: v1
data:
  base-alerting-rule.yml: |
    groups:
  base-recording-rule.yml: |
    groups:
  bc-recording-rule.yml: |
    groups:
  prometheus.yml: |
    global:
      scrape_interval:     1m
      evaluation_interval: 15s

    scrape_configs:
    - job_name: prometheus-server
      honor_labels: false
      static_configs:
        - targets: ["localhost:9090"]
    # 节点监控(node-exporter,cadvisor,kubelet)
    - job_name: node-exporter
      honor_labels: false
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - kubestar-monitor
      scheme: http
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_controller_kind
        - __meta_kubernetes_pod_controller_name
        regex: DaemonSet;node-exporter
        action: keep
      - source_labels:
        - __meta_kubernetes_endpoint_node_name
        target_label: node
        replacement: ${1}
    - job_name: standard-cadvisor
      honor_labels: false
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - kubestar-monitor
      scheme: http
      relabel_configs:
      - action: keep
        source_labels:
        - __meta_kubernetes_service_label_name
        regex: cadvisor
      - action: keep
        source_labels:
        - __meta_kubernetes_endpoint_port_name
        regex: http
      - source_labels:
        - __meta_kubernetes_endpoint_address_target_kind
        - __meta_kubernetes_endpoint_address_target_name
        separator: ;
        regex: Pod;(.*)
        replacement: ${1}
        target_label: pod
      - source_labels:
        - __meta_kubernetes_endpoint_node_name
        target_label: node
        replacement: ${1}
      metric_relabel_configs:
      - source_labels: [ __name__ ]
        regex: 'container_network_tcp_usage_total'
        action: keep
      - source_labels:
        - container_label_io_kubernetes_pod_name
        target_label: pod
      - source_labels:
        - container_label_io_kubernetes_container_name
        target_label: container
      - source_labels:
        - container_label_io_kubernetes_pod_namespace
        target_label: namespace
      - regex: container_label_io_kubernetes_pod_namespace
        action: labeldrop
      - regex: container_label_io_kubernetes_container_name
        action: labeldrop
      - regex: container_label_io_kubernetes_pod_name
        action: labeldrop
    - job_name: cadvisor
      honor_timestamps: true
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /metrics
      scheme: https
      kubernetes_sd_configs:
      - role: node
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - replacement: kubernetes.default.svc:443
        target_label: __address__
      - regex: (.+)
        replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
        source_labels:
        - __meta_kubernetes_node_name
        target_label: __metrics_path__
      metric_relabel_configs:
      - regex: pod_name
        action: labeldrop
      - regex: container_name
        action: labeldrop
      - source_labels:
        - instance
        target_label: node
    - job_name: kubelet
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - replacement: kubernetes.default.svc:443
        target_label: __address__
      - regex: (.+)
        replacement: /api/v1/nodes/$1/proxy/metrics
        source_labels:
        - __meta_kubernetes_node_name
        target_label: __metrics_path__
      - source_labels:
        - instance
        target_label: node
    #  kubernetes 元数据采集
    - job_name: kube-state-metrics
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - kubestar-monitor
      scheme: http
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_endpoints_name
        regex: kube-state-metrics
        action: keep
    # kubernetes master 组件监控
    - job_name: kube-dns
      honor_labels: false
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - kube-system
      scheme: http
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_endpoints_name
        - __meta_kubernetes_pod_container_port_number
        regex: kube-dns;9153
        action: keep
    - job_name: kube-apiserver
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - action: keep
        source_labels:
        - __meta_kubernetes_namespace
        - __meta_kubernetes_service_name
        - __meta_kubernetes_endpoint_port_name
        regex: default;kubernetes;https
    - job_name: kube-services-whitebox
      metrics_path: /metric
      kubernetes_sd_configs:
      - role: service
      relabel_configs:
      # service 指定 prometheus.io/http_metric=true  才能做服务发现
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_http_metric]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_namespace, __meta_kubernetes_service_annotation_prometheus_io_http_metric_port]
        action: replace
        target_label: instance
        regex: (.+);(.+);(.+)
        replacement: $1.$2:$3
      - target_label: __address__
        source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_namespace, __meta_kubernetes_service_annotation_prometheus_io_http_metric_port]
        action: replace
        regex: (.+);(.+);(.+)
        replacement: $1.$2:$3
      - target_label: __scheme__
        source_labels: [__meta_kubernetes_service_annotation_prometheus_io_http_metric_scheme]
      - target_label: __metrics_path__
        source_labels: [__meta_kubernetes_service_annotation_prometheus_io_http_metric_path]
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_service_name]
        target_label: name
      - action: labelmap
        regex: __meta_kubernetes_service_annotation_prometheus_io_http_metric_params_(.*)
        replacement: __param_${1}
    - job_name: kube-pods-whitebox
      metrics_path: /metrics
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      # pod 指定 prometheus.io/http_metric=true  才能做服务发现
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_http_metric]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_name, __meta_kubernetes_namespace, __meta_kubernetes_pod_annotation_prometheus_io_http_metric_port]
        action: replace
        target_label: instance
        regex: (.+);(.+);(.+)
        replacement: $1.$2:$3
      - target_label: __address__
        source_labels: [__meta_kubernetes_pod_ip, __meta_kubernetes_pod_annotation_prometheus_io_http_metric_port]
        action: replace
        regex: (.+);(.+)
        replacement: $1:$2
      - target_label: __scheme__
        source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_http_metric_scheme]
      - target_label: __metrics_path__
        source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_http_metric_path]
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - action: labelmap
        regex: __meta_kubernetes_pod_annotation_prometheus_io_http_metric_params_(.*)
        replacement: __param_${1}
    # dns blackbox config
    - job_name: kube-dns-blackbox
      metrics_path: /probe
      params:
        module: [dns]
      static_configs:
      - targets:
        - kube-dns.kube-system:53
      relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox:9115
    # kubernetes service blackbox
    - job_name: kube-services-blackbox
      metrics_path: /probe
      params:
        module: [http_2xx] # 使用get模块,且返回200
      kubernetes_sd_configs:
      - role: service
      relabel_configs:
      # service 指定 prometheus.io/http_probe=true  才能做服务发现
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_http_probe]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_namespace, __meta_kubernetes_service_annotation_prometheus_io_http_probe_port, __meta_kubernetes_service_annotation_prometheus_io_http_probe_path]
        action: replace
        target_label: __param_target
        regex: (.+);(.+);(.+);(.+)
        replacement: $1.$2:$3$4
      - target_label: __address__
        replacement: blackbox:9115
      - source_labels: [__param_target]
        target_label: instance
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_service_name]
        target_label: name
      - action: labelmap
        regex: __meta_kubernetes_service_annotation_prometheus_io_http_probe_params_(.*)
        replacement: __param_${1}
      # kubernetes ingress blackbox
    - job_name: kube-ingresses-blackbox
      metrics_path: /probe
      params:
        module: [http_2xx]
      kubernetes_sd_configs:
      - role: ingress  # ingress type
      relabel_configs:
      - source_labels: [__meta_kubernetes_ingress_annotation_prometheus_io_http_probe]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_ingress_scheme,__address__,__meta_kubernetes_ingress_path]
        regex: (.+);(.+);(.+)
        replacement: ${1}://${2}${3}
        target_label: __param_target
      - target_label: __address__
        replacement: blackbox:9115
      - source_labels: [__param_target]
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_ingress_annotation_prometheus_io_http_probe_params_(.*)
        replacement: __param_${1} 
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_ingress_name]
        target_label: name
kind: ConfigMap
metadata:
  annotations:
  labels:
    app: prometheus-server
  name: prometheus-config
  namespace: kubestar-monitor
